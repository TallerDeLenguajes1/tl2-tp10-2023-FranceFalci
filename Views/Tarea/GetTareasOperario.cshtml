@model List<IndexTareaViewModel>

@{
  // Obtén el valor del parámetro de consulta llamado "idTablero"
  @* var idTablero = Context.Request.Query["idTablero"];

  // Verifica si el valor existe antes de usarlo
  if (!String.IsNullOrEmpty(idTablero))
  {
    int idTableroInt = Convert.ToInt32(idTablero);

  } *@
}

@{
  var idTableroInt = 0; // o asigna un valor predeterminado apropiado
  var idTablero = Context.Request.Query["idTablero"];

  // Verifica si el valor existe antes de usarlo
  if (!String.IsNullOrEmpty(idTablero))
  {
    idTableroInt = Convert.ToInt32(idTablero);
  }
}



@{
  var tareasPorEstado = Model.GroupBy(t => t.Estado).ToDictionary(group => group.Key, group => group.ToList());
  // Define el orden específico de los estados
  var ordenEstados = new List<EstadoTarea> { EstadoTarea.Ideas, EstadoTarea.ToDo, EstadoTarea.Doing, EstadoTarea.Review,
EstadoTarea.Done };

  // Ordena las tareasPorEstado según el orden definido
  var estadosOrdenados = tareasPorEstado
  .OrderBy(stateTasks => ordenEstados.IndexOf(stateTasks.Key));

}

<div class="d-flex">
  @foreach (var estado in ordenEstados)
  {
    var bgColor = GetColorClass(estado);
    <div class=" @bgColor m-2 p-2 contenedor-tareas " data-estado="@estado">
      <h4>@estado</h4>

      @if (tareasPorEstado.ContainsKey(estado))
      {
        var tareas = tareasPorEstado[estado];
   
        foreach (var tarea in tareas)
        {
          var colorEstado = GetColorClass(tarea.Estado);
          <div class="tarea" draggable="true" data-bs-toggle="modal" data-bs-target="#modal-@tarea.Id" data-id="@tarea.Id"
            data-nombre="@tarea.Nombre" data-descripcion="@tarea.Descripcion">
            @tarea.Nombre
          </div>

          <div class="modal fade " id="modal-@tarea.Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog  modal-dialog-centered ">
              <div class="modal-content @colorEstado">
                <div class="modal-header">
                  <h1 class="modal-title fs-6" id="exampleModalLabel">@tarea.Nombre</h1>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  @tarea.Descripcion
                </div>
                <div class="modal-footer">
                  <button class="btn btn-ligth btn-icon-editar">


                
                    <a class="text-light text-decoration-none" asp-controller="Tarea" asp-action="EditarTareaAsignada"
                      asp-route-idTarea="@tarea.Id" asp-route-idTablero="@idTableroInt">Editar</a>

                  </button>
      

                   

                </div>
              </div>
            </div>
          </div>

        }
      }
      
    </div>
  }
</div>














@functions {
  

  
  string GetColorClass(EstadoTarea estado)
  {
    switch (estado)
    {
      case EstadoTarea.Ideas:
        return "ideas";
      case EstadoTarea.ToDo:
        return "todo";
      case EstadoTarea.Doing:
        return "doing";
      case EstadoTarea.Review:
        return "review";
      case EstadoTarea.Done:
        return "done";
      default:
        return ""; 
    }
  }


}


<script src="~/js/drag.js" asp-append-version="true"></script>
@section Scripts {
  <partial name="_NotificationPartial" />
}




        @* <div class="card tarea  mb-4 text-white  " draggable="true" style="height:4rem; margin-left:1rem;"
          data-id="@tarea.Id" data-nombre="@tarea.Nombre" data-descripcion="@tarea.Descripcion" >

          <div class="card-header fw-bold">@tarea.Nombre</div>
          <div class="card-body">
            <p class="card-text">@tarea.Descripcion</p>
     

            <button class="btn btn-danger">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round"
                  d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />
              </svg>
              <a class="text-light text-decoration-none" asp-controller="Tarea" asp-action="EditarTarea"
                asp-route-idTarea="@tarea.Id" >Editar</a>
            </button>
            <button class="btn btn-danger">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round"
                  d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
              </svg>

              <a class="text-light text-decoration-none" asp-controller="Tarea" asp-action="DeleteTarea"
                asp-route-idTarea="@tarea.Id" onclick="return confirmarEliminar('@tarea.Nombre');">Eliminar</a>
            </button> 

            
          </div>
        </div> *@